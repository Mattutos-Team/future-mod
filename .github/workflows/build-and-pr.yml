name: Build & Create PR for Develop

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches:
      - feature/*  # Dispara o workflow quando h치 um push em uma branch feature
      - fix/*  # Dispara o workflow quando h치 um push em uma branch fix
      - hotfix/*  # Dispara o workflow quando h치 um push em uma branch hotfix

jobs:
  # Job para limpar e gerar os dados (DataGen), caso necess치rio
  datagen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do c칩digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fazer pull da branch remota
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin ${{ github.ref }} --rebase || echo "Nenhuma mudan칞a remota encontrada"

      - name: Configurar JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Configurar cache do Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Dar permiss칚o de execu칞칚o ao Gradle Wrapper
        run: chmod +x gradlew

      - name: Limpar a pasta 'generated'
        run: rm -rf src/generated

      - name: Gerar Data (runData)
        run: ./gradlew runData

      - name: Verifica altera칞칫es Datagen para Atualizar commit
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if git diff --staged --quiet; then
            echo "Sem altera칞칫es para commitar."
          else
            git commit -m "游댃 Atualiza칞칚o autom치tica do DataGen"
            git push
          fi
  # Job de build
  build:
    runs-on: ubuntu-latest
    needs: [datagen]  # Este job s칩 rodar치 depois que datagen terminar com sucesso
    steps:
      - name: Checkout do c칩digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fazer pull da branch remota
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin ${{ github.ref }} --rebase || echo "Nenhuma mudan칞a remota encontrada"

      - name: Configurar JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'  # Voc칡 pode usar 'zulu', 'adopt', 'jetbrains'.
          java-version: '21'
          cache: 'gradle'

      - name: Configurar cache do Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Dar permiss칚o de execu칞칚o ao Gradle Wrapper
        run: chmod +x gradlew

      - name: Construir o Mod
        run: ./gradlew build

  # Job de teste
  test:
    runs-on: ubuntu-latest
    needs: [datagen]  # Este job s칩 rodar치 depois que datagen terminar com sucesso
    steps:
      - name: Checkout do c칩digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fazer pull da branch remota
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin ${{ github.ref }} --rebase || echo "Nenhuma mudan칞a remota encontrada"

      - name: Configurar JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'  # Voc칡 pode usar 'zulu', 'adopt', 'jetbrains'.
          java-version: '21'
          cache: 'gradle'

      - name: Configurar cache do Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Dar permiss칚o de execu칞칚o ao Gradle Wrapper
        run: chmod +x gradlew

      - name: Rodar os testes
        run: ./gradlew test

  # Job para criar o PR ap칩s os dois jobs anteriores (build e test) terminarem
  create_pr:
    runs-on: ubuntu-latest
    needs: [build, test]  # Este job s칩 rodar치 depois que build e test terminarem com sucesso
    steps:
      - name: Checkout do c칩digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fazer pull da branch remota
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin ${{ github.ref }} --rebase || echo "Nenhuma mudan칞a remota encontrada"

      - name: Tratar nome da branch
        id: branch_name
        run: |
          # Pega o nome da branch a partir do ref
          BRANCH_NAME="${GITHUB_REF//refs\/heads\//}"
          echo "Branch name: $BRANCH_NAME"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Criar PR autom치tico para Develop
        uses: peter-evans/create-pull-request@v7
        with:
          base: develop
          branch: ${{ github.ref }}
          title: "游댢 PR aberto automaticamente. develop <- ${{ env.branch_name }}"
          body: "Este PR foi criado automaticamente ap칩s um build e teste bem-sucedidos."
          labels: "automate-pr, build-pass"
